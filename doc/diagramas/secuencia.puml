@startuml secuencia

actor trabajador1 
actor trabajador2 

trabajador1 -> Monitor: disparar(transicion)

Monitor -> mutexMonitor: acquire()
mutexMonitor --> Monitor

Monitor -> RedDePetri: disparar(transicion)

RedDePetri -> RedDePetri: evaluarDisparo(transicion)

RedDePetri -> Tiempo: getTransicionesTemporizadas(transicion)
Tiempo --> RedDePetri: esTemporizada

alt esTemporizada == true
    RedDePetri -> Tiempo: enVentana(transicion)
    Tiempo --> RedDePetri: enVentana

    alt enVentana == true
        RedDePetri --> RedDePetri: puedeDisparar == (sensibilizadas[transicion] == 1)
    else enVentana == false
        RedDePetri --> RedDePetri: puedeDisparar == false
    end
else esTemporizada == false
    RedDePetri --> RedDePetri: puedeDisparar == (sensibilizadas[transicion] == 1)
end

alt puedeDisparar == true
    RedDePetri -> RedDePetri: Marcado(j+1) = Marcado(j) + I * sigma
    RedDePetri -> RedDePetri: calcularSensibilizadas()
    RedDePetri -> RedDePetri: checkPInvariantes()

    RedDePetri -> Log: escribirLog(transicion)
    Log --> RedDePetri
end

RedDePetri --> RedDePetri: dispare == puedeDisparar

RedDePetri --> Monitor: dispare

alt dispare == true
    Monitor -> RedDePetri: getTransicionesSensibilizadas()
    RedDePetri --> Monitor: sensibilizadas

    Monitor -> colas: quienesEstan()
    colas --> Monitor: quienesEstan

    Monitor -> Monitor: m = sensibilizadas & \nquienesEstan

    Monitor -> Politica: decision(m)
    Politica --> Monitor: aDespertar
    alt aDespertar > 0
        Monitor -> colas: release()
        colas --> Monitor
        Monitor --> trabajador2: se despierta el hilo
    else aDespertar == -1
        Monitor -> mutexMonitor: release()
        mutexMonitor --> Monitor
        Monitor --> trabajador1: me voy del monitor
    end
else dispare == false
    Monitor -> RedDePetri: estaSensibilizada(transicion)
    RedDePetri --> Monitor: estaSensibilizada
    alt estaSensibilizada == true
        Monitor -> mutexMonitor: release()
        mutexMonitor --> Monitor
        Monitor -> Tiempo: calcularTiempoRestante(transicion)
        Tiempo --> Monitor: aDormir
        Monitor -> trabajador1: sleep(aDormir)
        trabajador1 --> Monitor
        Monitor -> Monitor: disparar(transicion)
    else estaSensibilizada == false
        Monitor -> mutexMonitor: release()
        mutexMonitor --> Monitor
        Monitor -> colas: acquire()
        colas --> Monitor
        Monitor -> RedDePetri: disparar(transicion)
        RedDePetri --> Monitor: true
        Monitor -> Monitor: signal()
        alt signal() == false
            Monitor -> mutexMonitor: release()
            mutexMonitor --> Monitor
        end
    end
end

Monitor --> trabajador1

@enduml