@startuml clases

class Trabajador {
    # Monitor monitor
    # int[][] transiciones
    + disparos (  )    
}

class Capataz {
    + run (  )    
}

class Pasante {
    + run (  )    
}

class Operario {
    + run (  )    
}

class Politica {
    + int decision ( int[] )
}

class Tiempo {
    - int[] transicionesTemporizadas
    - long[] tiempoDeSensibilizado
    - long[] alfas
    - long[] betas
    - long[] q
    + actualizarQ ( int )
    + sensibilizarTiempo ( int )
    + resetTiempo ( int )
    + enVentana ( int )
    + int calcularTiempoRestante ( int )
    + int[] getTransicionesTemporizadas
    + long[] getTiempoDeSensibilizado(  )
}

class Log {
    - String output
    - Log instance
    + Log getInstance (  )
    + escribirLog ( String )
    + writeFile (  )
}

class RedDePetri {
    - int[] marcado
    - int[] pInvariantes
    - int[][] matrizIncidencia
    - int[] tSensibilizadas
    - Log log
    - Tiempo tiempo
    + boolean disparar ( int[] )
    + int[] getTransicionesSensibilizadas (  )
    + int getCantidadTransiciones (  )
    + boolean checkPInvariantes (  )
    - boolean evaluarDisparo ( int[] )
    - calcularNuevoEstado ( int[] )
    - calcularSensibilizadas (  )
    - int getMarcadoPlaza ( int )
    - int traducirTransicion ( int[] )

}

class Monitor {
    - Semaphore mutexMonitor
    - Semaphore[] colas
    - RedDePetri rdp
    - Politica politica
    - Tiempo tiempo
    - int nTransicionesRed
    - int[] tInvariantes
    + disparar ( int[] )
    + boolean seguirDisparando (  )
    + addInvariante ( int[] )
    + getCuantosDeCada (  )
    - int[] obtenerVectorM (  )
    - signal (  )
    - dormir ( int[] )
    - traducirTransicion ( int[] )
}

class Main {
    + main ( String[] )
    - int[] pInvariantes
    - int[][] matrizIncidencia
    - int[] m0
    - int[] tSensibilizadas
    - int[] t1
    - int[] t2
    - int[] t3
    - int[] t4
    - int[] t5
    - int[] t6
    - int[] t7
    - int[] t8
    - int[] t9
    - int[] t10
    - int[] t11
    - int[] temporizadas
    - long[] alfas
    - long[] betas
    - Tiempo tiempo
    - Log log
    - RedDePetri rdp
    - Politica politica
    - Monitor monitor
    - Operario[] grupo1
    - Operario[] grupo2
    - Capataz capataz
    - Pasante pasante
    - Thread[] threads
}

class Semaphore {
    + acquire (  )
    + release (  )
}

class Thread {
    + start (  )
    + join (  )
    + sleep ( long )
}

interface Runnable

class FileWriter

class PrintWriter

Monitor --> Semaphore
RedDePetri <- Monitor
Monitor -> Politica

Runnable <|-. Capataz
Runnable <|-. Operario
Runnable <|-. Pasante
Runnable <|-. Thread

Trabajador <|-- Capataz
Trabajador <|-- Operario
Trabajador <|-- Pasante

Capataz --> Monitor
Pasante --> Monitor
Operario --> Monitor

Main --> Tiempo
Main --> Log
Main ----> Capataz
Main ----> Operario
Main ----> Pasante
Main ----> Thread
Main ----> RedDePetri
Main ----> Politica
Main -----> Monitor

Tiempo <-- Monitor
Tiempo <-- RedDePetri

Log --> Log
FileWriter <- Log
Log -> PrintWriter
Log <-- RedDePetri

@enduml